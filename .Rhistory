getwd()
# getwd()
setwd("/Users/taehoonkim/Desktop/Workspace/git_project/repSup_R")
options(scipen=4)
<br>
~~
<br>
rm(list=ls())
# getwd()
setwd("/Users/taehoonkim/Desktop/Workspace/git_project/repSup_R")
options(scipen=4)
rm(list=ls())
# getwd()
setwd("/Users/taehoonkim/Desktop/Workspace/git_project/repSup_R")
options(scipen=4)
```{css, echo=FALSE}
pre code, pre, code {
white-space: pre !important;
overflow-x: scroll !important;
word-break: keep-all !important;
word-wrap: initial !important;
}
pre code, pre, code {
white-space: pre !important;
overflow-x: scroll !important;
word-break: keep-all !important;
word-wrap: initial !important;
}
```{r setup, message=FALSE}
set.seed(12345) # for reproducibility
options(knitr.kable.NA = '')
# install // load packages
# Some packages need to be loaded.
# We use `pacman` as a package manager, which takes care of the other packages.
if (!require("devtools", quietly = TRUE)) install.packages("devtools")
if (!require("papaja", quietly = TRUE)) devtools::install_github("crsh/papaja")
if (!require("patchwork", quietly = TRUE)) devtools::install_github("thomasp85/patchwork")
if (!require("klippy", quietly = TRUE)) devtools::install_github("RLesur/klippy")
if (!require("pacman", quietly = TRUE)) install.packages("pacman")
if (!require("Rmisc", quietly = TRUE)) install.packages("Rmisc")
if (!require("ggbeeswarm", quietly = TRUE)) install.packages("ggbeeswarm") # Never load it directly.
pacman::p_load(tidyverse, papaja, knitr, dplyr, car, psych, afex, lme4, lmerTest,
emmeans, ggplot2, ggpubr, lattice, latticeExtra, parallel, effects, psycho, caret)
library("patchwork"); library("klippy")
klippy::klippy()
# install // load packages
# Some packages need to be loaded.
# We use `pacman` as a package manager, which takes care of the other packages.
if (!require("devtools", quietly = TRUE)) install.packages("devtools")
if (!require("papaja", quietly = TRUE)) devtools::install_github("crsh/papaja")
if (!require("patchwork", quietly = TRUE)) devtools::install_github("thomasp85/patchwork")
if (!require("klippy", quietly = TRUE)) devtools::install_github("RLesur/klippy")
if (!require("pacman", quietly = TRUE)) install.packages("pacman")
if (!require("Rmisc", quietly = TRUE)) install.packages("Rmisc")
if (!require("ggbeeswarm", quietly = TRUE)) install.packages("ggbeeswarm") # Never load it directly.
pacman::p_load(tidyverse, papaja, knitr, dplyr, car, psych, afex, lme4, lmerTest,
emmeans, ggplot2, ggpubr, lattice, latticeExtra, parallel, effects, psycho, caret)
library("patchwork"); library("klippy")
klippy::klippy()
# Abstract
<br>
이 분석은 Repetition Suppression / Enhancement의 신경 기제를 Voxel-wise Background Connectivity를 통해 살펴보는 것에 초점을 맞추고 있다.
구체적으로, Repetition Suppression / Enhancement를 설명하는 서로 다른 두 가지 모델. Sharpening Model과 Predictive Coding Model을 비교하고자 한다.
